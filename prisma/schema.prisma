// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(cuid())
  username     String    @unique
  email        String    @unique
  passwordHash String    @map("password_hash")
  isAdmin      Boolean   @default(false) @map("is_admin")
  sessions     Session[]
  posts        Post[]
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime  @default(now()) @updatedAt @map("updated_at")

  @@map("users")
}

model Session {
  id        String   @id @default(cuid())
  expiresAt DateTime @map("expires_at")
  userId    String   @map("user_id")
  user      User     @relation(fields: [userId], references: [id])

  @@map("sessions")
}

model Post {
  id          String   @id @default(cuid())
  title       String   @unique
  slug        String   @unique
  description String
  body        String
  tags        String? // Consider JSON array later
  imageUrl    String?  @map("image_url")
  gallery     String? // Optional JSON string
  status      Int      @default(1)
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  user        User?    @relation(fields: [userId], references: [id])
  userId      String?

  @@map("posts")
}

model Tag {
  id    String @id @default(cuid())
  title String @unique
  rate  Int?   @default(0)

  @@map("tags")
}
